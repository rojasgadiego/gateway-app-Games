# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type LoginResponseDto {
  status: Float!
  token: String!
  error: String!
  idUser: String!
}

type RegisterResponseDto {
  status: Float!
  error: String!
  message: String!
}

type ValidateResponseDto {
  status: Float!
  error: String
  userId: String
}

type Usuario {
  id: String!
  nombre: String!
  email: String!
  password: String!
}

type FindUserResponseDto {
  status: Float!
  error: String!
  user: Usuario
}

type Ingrediente {
  id: Float!
  name: String!
  description: String!
  price: Float!
  stock: Float!
  state: String!
}

type Producto {
  id: Float!
  name: String!
  description: String!
  price: Float!
  rank: Float!
  stock: Float!
  state: String!
  image: String!
  ingredients: [Ingrediente!]!
}

type ProductosResponseDto {
  status: Float!
  error: String!
  data: [Producto!]!
}

type SeedProductResponse {
  status: Float!
  error: String!
  message: String!
}

type SeedIngredienteResponse {
  status: Float!
  error: String!
  message: String!
}

type CreateCarritoResponseDto {
  status: Float!
  error: String!
  message: String!
  idCarrito: Float!
}

type updateCarritoResponse {
  status: Float!
  error: String!
  update: Boolean!
}

type CreateLineaProductoResponseDto {
  status: Float!
  error: String!
  message: String!
}

type getProductoByIdCarritoResponse {
  status: Float!
  error: String!
  productos: [Producto!]!
}

type vaciarCarritoResponse {
  status: Float!
  error: String!
  Empty: Boolean!
}

type Lineaproductoi {
  id: Int!
  producto: Producto!
  cant: Float!
  subprice: Float!
  idcarrito: Float!
}

type getLineaProductoByIdCarritoResponse {
  status: Float!
  error: String!
  lp: [Lineaproductoi!]!
}

type deleteLineaProductoResponse {
  status: Float!
  error: String!
  deleted: Boolean!
}

type updateLineaProductoResponse {
  status: Float!
  error: String!
  update: Boolean!
}

type CreatePagoResponseDto {
  status: Float!
  error: String!
  token: String!
  url: String!
}

type ValidateTransaccionResponseDto {
  status: Float!
  error: String!
  vci: String!
  statustrx: String!
  responseCode: Float!
}

type Query {
  findUser(findUserInput: FindUserRequestDto!): FindUserResponseDto!
  getProductos: ProductosResponseDto!
  getProductoByIdCarrito(getProductoByIdCarritoInput: getProductoByIdCarritoInput!): getProductoByIdCarritoResponse!
  getLineaProductoByIdCarrito(getLineaProductoByIdCarritoInput: getProductoByIdCarritoInput!): getLineaProductoByIdCarritoResponse!
}

input FindUserRequestDto {
  id: String!
}

input getProductoByIdCarritoInput {
  id: Int!
}

type Mutation {
  login(loginUserInput: LoginRequestDto!): LoginResponseDto!
  register(registerUserInput: RegisterRequestDto!): RegisterResponseDto!
  validate(validateUserInput: ValidateInputDto!): ValidateResponseDto!
  seedProduct: SeedProductResponse!
  seedIngredientes: SeedIngredienteResponse!
  createCarrito(createCarritoInput: CreateCarritoInput!): CreateCarritoResponseDto!
  updateCarrito(updateCarritoInput: updateCarritoInput!): updateCarritoResponse!
  crearLineaProducto(createLineaProductoInput: CreateLineaProductoInput!): CreateLineaProductoResponseDto!
  vaciarCarrito(vaciarCarritoInput: vaciarCarritoRequest!): vaciarCarritoResponse!
  updateLineaProducto(updatelineaProductoIdInput: updateLineaProductoRequest!): updateLineaProductoResponse!
  removeLineaProducto(lineaProductoIdInput: deleteLineaProductoRequest!): deleteLineaProductoResponse!
  createPago(createPagoInput: CreatePagoInput!): CreatePagoResponseDto!
  validateTransaccion(validateTransaccionInput: ValidateTransaccionInput!): ValidateTransaccionResponseDto!
}

input LoginRequestDto {
  email: String!
  password: String!
}

input RegisterRequestDto {
  nombre: String!
  email: String!
  password: String!
}

input ValidateInputDto {
  token: String!
}

input CreateCarritoInput {
  idUser: Float!
}

input updateCarritoInput {
  id: Float!
  state: String!
}

input CreateLineaProductoInput {
  idcarrito: Float!
  idProducto: Float!
  cant: Float!
  subprice: Float!
}

input vaciarCarritoRequest {
  id: Float!
}

input updateLineaProductoRequest {
  id: Float!
  cant: Float!
}

input deleteLineaProductoRequest {
  id: Float!
}

input CreatePagoInput {
  amount: Float!
}

input ValidateTransaccionInput {
  token: String!
}